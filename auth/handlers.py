# auth/handlers.py
from telethon import events, Button
from auth.auth import register_user, authorize_user, check_authorization
from utils.database import SessionLocal
from sqlalchemy import text

async def setup_auth_handlers(bot_client):
    @bot_client.on(events.NewMessage(pattern='/start'))
    async def start_handler(event):
        telegram_id = event.sender_id
        username = event.sender.username
        full_name = f"{event.sender.first_name or ''} {event.sender.last_name or ''}".strip()

        session = SessionLocal()
        result = session.execute(
            text("SELECT is_authorized FROM users WHERE telegram_id = :telegram_id"),
            {"telegram_id": telegram_id}
        ).scalar()
        session.close()

        if result:
            await event.reply(
                "üîπ –í–∏ –≤–∂–µ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω—ñ! –û–±–µ—Ä—ñ—Ç—å –ø—É–Ω–∫—Ç —ñ–∑ –º–µ–Ω—é.",
                buttons=[
                    [Button.text("üß™ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è", resize=True)],
                    [Button.text("üìà –ú—ñ–π –ø—Ä–æ–≥—Ä–µ—Å", resize=True)],
                    [Button.text("üìå –û—á—ñ–∫—É–π—Ç–µ –æ–Ω–æ–≤–ª–µ–Ω—å", resize=True)]
                ]
            )
        else:
            await event.reply(
                "ü§î –í–∏ —â–µ –Ω–µ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω—ñ. –•–æ—á–µ—Ç–µ –∑–∞—Ä–µ—î—Å—Ç—Ä—É–≤–∞—Ç–∏—Å—å?",
                buttons=[
                    [Button.text("‚úÖ –ó–∞—Ä–µ—î—Å—Ç—Ä—É–≤–∞—Ç–∏—Å—è", resize=True),
                     Button.text("‚ùå –í—ñ–¥–º–æ–≤–∏—Ç–∏—Å—è", resize=True)]
                ]
            )

    @bot_client.on(events.NewMessage(pattern='‚úÖ –ó–∞—Ä–µ—î—Å—Ç—Ä—É–≤–∞—Ç–∏—Å—è'))
    async def register_handler(event):
        telegram_id = event.sender_id
        username = event.sender.username
        full_name = f"{event.sender.first_name or ''} {event.sender.last_name or ''}".strip()

        if not check_authorization(telegram_id):
            register_user(telegram_id, username, full_name)
            authorize_user(telegram_id)
            await event.reply(
                "‚úÖ –í–∏ —É—Å–ø—ñ—à–Ω–æ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω—ñ! –î—è–∫—É—é, —â–æ –ø—Ä–∏—î–¥–Ω–∞–ª–∏—Å—è.",
                buttons=[
                    [Button.text("üß™ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è", resize=True)],
                    [Button.text("üìà –ú—ñ–π –ø—Ä–æ–≥—Ä–µ—Å", resize=True)],
                    [Button.text("üìå –û—á—ñ–∫—É–π—Ç–µ –æ–Ω–æ–≤–ª–µ–Ω—å", resize=True)]
                ]
            )
        else:
            await event.reply(
                "üîπ –í–∏ –≤–∂–µ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω—ñ.",
                buttons=[
                    [Button.text("üß™ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è", resize=True)],
                    [Button.text("üìà –ú—ñ–π –ø—Ä–æ–≥—Ä–µ—Å", resize=True)],
                    [Button.text("üìå –û—á—ñ–∫—É–π—Ç–µ –æ–Ω–æ–≤–ª–µ–Ω—å", resize=True)]
                ]
            )

    @bot_client.on(events.NewMessage(pattern='‚ùå –í—ñ–¥–º–æ–≤–∏—Ç–∏—Å—è'))
    async def decline_registration(event):
        await event.reply("üö´ –í–∏ –≤—ñ–¥–º–æ–≤–∏–ª–∏—Å—å –≤—ñ–¥ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó. –Ø–∫—â–æ –ø–µ—Ä–µ–¥—É–º–∞—î—Ç–µ, –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å /start")
