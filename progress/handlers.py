from telethon import events
from sqlalchemy.orm import joinedload
from utils.database import SessionLocal
from testing.models import UserTestSession
from auth.models import User

async def setup_progress_handlers(bot_client):
    @bot_client.on(events.NewMessage(pattern=r"üìà –ú—ñ–π –ø—Ä–æ–≥—Ä–µ—Å"))
    async def handle_progress(event):
        session = SessionLocal()
        telegram_id = event.sender_id

        user = session.query(User).filter(User.telegram_id == telegram_id).first()
        if not user:
            await event.reply("‚ùå –í–∏ –Ω–µ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω—ñ.")
            session.close()
            return

        # –í—Å—ñ –∑–∞–≤–µ—Ä—à–µ–Ω—ñ —Å–µ—Å—ñ—ó –∑ –æ—Ü—ñ–Ω–∫–∞–º–∏
        sessions = session.query(UserTestSession).options(joinedload(UserTestSession.test)).filter(
            UserTestSession.user_id == user.id,
            UserTestSession.completed_at.isnot(None),
            UserTestSession.score.isnot(None)
        ).all()

        # –ó–∞–ª–∏—à–∞—î–º–æ –ª–∏—à–µ –Ω–∞–π–∫—Ä–∞—â—É —Å–µ—Å—ñ—é –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ —Ç–µ—Å—Ç—É
        best_sessions_by_test = {}
        for s in sessions:
            if s.test_id not in best_sessions_by_test or (s.score or 0) > (best_sessions_by_test[s.test_id].score or 0):
                best_sessions_by_test[s.test_id] = s

        best_sessions = list(best_sessions_by_test.values())

        total = len(best_sessions)
        perfect = sum(1 for s in best_sessions if s.score == 100)
        avg_score = sum(s.score for s in best_sessions if s.score is not None) // total if total > 0 else 0

        # –§–æ—Ä–º—É—î–º–æ —Ç–µ–∫—Å—Ç –∑–≤—ñ—Ç—É
        msg = (
            "**–í–∞—à –ø—Ä–æ–≥—Ä–µ—Å:**\n\n"
            f"üß™ –ü—Ä–æ–π–¥–µ–Ω–æ —Ç–µ—Å—Ç—ñ–≤: {total}\n"
            f"üéØ –Ü–¥–µ–∞–ª—å–Ω–æ (100%): {perfect}\n"
            f"üìà –°–µ—Ä–µ–¥–Ω—ñ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {avg_score}%\n\n"
            f"üìù **–ù–∞–π–∫—Ä–∞—â–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ —Ç–µ—Å—Ç–∞—Ö:**"
        )

        for s in best_sessions:
            emoji = "‚úÖ" if s.score >= 70 else "‚ùå"
            msg += f"\n‚Ä¢ {s.test.title}: {s.score}% {emoji}"

        await event.reply(msg, parse_mode='markdown')
        session.close()
